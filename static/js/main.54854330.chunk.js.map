{"version":3,"sources":["components/BreakLength.js","components/SessionLength.js","components/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["BreakLength","props","className","id","onClick","breakLength","decreaseBreak","increaseBreak","SessionLength","sessionLength","decreaseSession","increaseSession","Timer","state","isSession","timerSecond","intervalID","shouldStop","playTimer","bind","decreaseTimer","stopTimer","resetTimer","this","setState","prevState","setInterval","timerMinute","toggleInterval","audio","play","currentTime","decreaseTimerMinute","clearInterval","pause","ref","src","React","Component","App","defaultSession","defaultBreak","onDecreaseBreakLength","onIncreaseBreakLength","onIncreaseSessionLength","onDecreaseSessionLength","onDecreaseTimerMinute","onToggleInterval","onResetTimer","onPlayStopTimer","timerBreak","isPlay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54854330.chunk.js","sourcesContent":["import '../styles/BreakLength.css';\n\nfunction BreakLength(props) {\n    function decreaseCounter() {\n        if (props.breakLength === 1) {\n            return;\n        }\n        props.decreaseBreak();\n    }\n\n    function increaseCounter() {\n        if (props.breakLength === 60) {\n            return;\n        }\n        props.increaseBreak();\n    }\n    return (\n        <div className='break-section'>\n            <p id='break-label'>Break Length</p>\n            <content className='break-timer'>\n                <button className='value-buttons' id='break-decrement' onClick={decreaseCounter}>-</button>\n                <p id='break-length'>{props.breakLength}</p>\n                <button className='value-buttons' id='break-increment' onClick={increaseCounter}>+</button>\n            </content>\n        </div>\n    )\n}\n\nexport default BreakLength;","import '../styles/SessionLength.css';\n\nfunction SessionLength(props) {\n\n    function decreaseCounter() {\n        if (props.sessionLength === 1) {\n            return;\n        }\n        props.decreaseSession();\n    }\n\n    function increaseCounter() {\n        if (props.sessionLength === 60) {\n            return;\n        }\n        props.increaseSession();\n    }\n\n    return (\n        <div className='session-section'>\n            <p id='session-label'>Session Length</p>\n            <section className='session-timer'>\n                <button id='session-decrement' className='value-buttons' onClick={decreaseCounter}>-</button>\n                <p id='session-length'>{props.sessionLength}</p>\n                <button id='session-increment' className='value-buttons' onClick={increaseCounter}>+</button>\n            </section>\n        </div >\n    )\n}\n\nexport default SessionLength;","import React from 'react';\nimport '../styles/Timer.css';\n\nclass Timer extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            isSession: true,\n            timerSecond: 0,\n            intervalID: 0,\n            shouldStop: true\n        }\n        this.playTimer = this.playTimer.bind(this);\n        this.decreaseTimer = this.decreaseTimer.bind(this);\n        this.stopTimer = this.stopTimer.bind(this);\n        this.resetTimer = this.resetTimer.bind(this);\n    }\n\n    playTimer() {\n\n        this.setState((prevState) => {\n            return {\n                shouldStop: !prevState.shouldStop\n            }\n        })\n        if (this.state.shouldStop === false) {\n            this.stopTimer();\n        } else {\n            let intervalID = setInterval(this.decreaseTimer, 1000);\n            this.setState({\n                intervalID: intervalID,\n            })\n        }\n    }\n\n    decreaseTimer() {\n        switch (this.state.timerSecond) {\n            case 0:\n                if (this.props.timerMinute === 0) {\n                    if (this.state.isSession) {\n                        this.setState({\n                            isSession: false\n                        })\n                        this.props.toggleInterval(this.state.isSession);\n                        this.audio.play();\n                        this.audio.currentTime = 0;\n                    } else {\n                        this.setState({\n                            isSession: true\n                        })\n                        this.props.toggleInterval(this.state.isSession);\n                        this.audio.play();\n                        this.audio.currentTime = 0;\n                    }\n                }\n                this.props.decreaseTimerMinute();\n                this.setState({\n                    timerSecond: 59\n                })\n                break;\n            default:\n                this.setState((prevState) => {\n                    return {\n                        timerSecond: prevState.timerSecond - 1\n                    }\n                })\n                break;\n        }\n    }\n\n    stopTimer() {\n        clearInterval(this.state.intervalID);\n    }\n\n    resetTimer() {\n        this.stopTimer();\n        this.props.resetTimer();\n        this.setState({\n            timerSecond: 0\n        })\n        this.audio.pause();\n        this.audio.currentTime = 0;\n        this.setState({\n            isSession: true\n        })\n    }\n\n    render() {\n        return (\n            <div className='timer'>\n                <div className='timer-values'>\n                    <h4 id='timer-label'>{this.state.isSession === true ? \"Session\" : \"Break\"}</h4>\n                    <content id='time-left'>\n                        <span className='timer-text'>\n                            {this.props.timerMinute === 0 ? '00' :\n                                this.props.timerMinute < 10 ? '0' + this.props.timerMinute :\n                                    this.props.timerMinute}\n                        </span>\n                        <span className='timer-text'>:</span>\n                        <span className='timer-text'>\n                            {this.state.timerSecond === 0 ? '00' :\n                                this.state.timerSecond < 10 ? '0' + this.state.timerSecond :\n                                    this.state.timerSecond}\n                        </span>\n                        <audio id='beep'\n                            ref={ref => this.audio = ref}\n                            src={\"https://sampleswap.org/samples-ghost/REMIXABLE%20COLLECTIONS/105%20Dibble%20Dobble/1575[kb]105_sevenths-piano-chording.wav.mp3\"}\n                        >\n\n                        </audio>\n                    </content>\n                </div>\n                <div className='timer-buttons'>\n                    <button id='start_stop' className='timer-button' onClick={this.playTimer}>START/STOP</button>\n                    <button id='reset' className='timer-button' onClick={this.resetTimer}>RESET</button>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Timer;","import './App.css';\nimport React from 'react';\nimport BreakLength from './components/BreakLength';\nimport SessionLength from './components/SessionLength';\nimport Timer from './components/Timer';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      defaultSession: 25,\n      defaultBreak: 5,\n      breakLength: 5,\n      sessionLength: 25,\n      timerMinute: 25\n    }\n    this.onDecreaseBreakLength = this.onDecreaseBreakLength.bind(this);\n    this.onIncreaseBreakLength = this.onIncreaseBreakLength.bind(this);\n    this.onIncreaseSessionLength = this.onIncreaseSessionLength.bind(this);\n    this.onDecreaseSessionLength = this.onDecreaseSessionLength.bind(this);\n    this.onDecreaseTimerMinute = this.onDecreaseTimerMinute.bind(this);\n    this.onToggleInterval = this.onToggleInterval.bind(this);\n    this.onResetTimer = this.onResetTimer.bind(this);\n    this.onPlayStopTimer = this.onPlayStopTimer.bind(this);\n  }\n\n  onIncreaseBreakLength() {\n    this.setState((prevState) => {\n      return {\n        breakLength: prevState.breakLength + 1\n      }\n    })\n  }\n\n  onDecreaseBreakLength() {\n    this.setState((prevState) => {\n      return {\n        breakLength: prevState.breakLength - 1\n      }\n    })\n  }\n\n  onIncreaseSessionLength() {\n    this.setState((prevState) => {\n      return {\n        sessionLength: prevState.sessionLength + 1,\n        timerMinute: prevState.timerMinute + 1\n      }\n    })\n  }\n\n  onDecreaseSessionLength() {\n    this.setState((prevState) => {\n      return {\n        sessionLength: prevState.sessionLength - 1,\n        timerMinute: prevState.timerMinute - 1\n      }\n    })\n  }\n\n  onDecreaseTimerMinute() {\n    this.setState((prevState) => {\n      return {\n        timerMinute: prevState.timerMinute - 1\n      }\n    })\n  }\n\n  onToggleInterval(isSession) {\n    if (isSession) {\n      this.setState({\n        timerMinute: this.state.sessionLength\n      })\n    } else {\n      this.setState({\n        timerMinute: this.state.breakLength\n      })\n    }\n  }\n\n  onResetTimer() {\n    this.setState({\n      timerMinute: this.state.defaultSession,\n      timerBreak: this.state.defaultBreak,\n      sessionLength: this.state.defaultSession,\n      breakLength: this.state.defaultBreak\n    })\n  }\n\n  onPlayStopTimer(isPlay) {\n    this.setState({\n      isPlay: isPlay\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <h1>POMODORO TIMER</h1>\n        <section className='timers'>\n          <SessionLength\n            sessionLength={this.state.sessionLength}\n            increaseSession={this.onIncreaseSessionLength}\n            decreaseSession={this.onDecreaseSessionLength}\n          />\n          <Timer\n            decreaseTimerMinute={this.onDecreaseTimerMinute}\n            toggleInterval={this.onToggleInterval}\n            timerMinute={this.state.timerMinute}\n            timerBreak={this.state.breakLength}\n            resetTimer={this.onResetTimer}\n          />\n          <BreakLength\n            breakLength={this.state.breakLength}\n            increaseBreak={this.onIncreaseBreakLength}\n            decreaseBreak={this.onDecreaseBreakLength}\n          />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}